## Default settings for all the scenarios we want to use for our evaluation
## For running this simulation with different seeds for the pseudo-random generators, change the prefixes of
## the different Message Generators. For the movement model the MovementModel.rngSeed can be changed
## These seeds should then be pluged-in with run indexing
## Scenario settings
Scenario.updateInterval = 0.1
Scenario.simulateConnections = true
# Define 3 different node groups
Scenario.nrofHostGroups = 3

# "WiFi" interface for all nodes
wInterface.type = InterferenceLimitedInterface
# Transmit speed of 50 Mbps = 6250kBps
wInterface.transmitSpeed = 6250k
wInterface.transmitRange = 30

# Common settings for all groups
Group.movementModel = VoluntaryHelperMovement
Group.router = EpidemicRouter
# Buffer size of 10 MB
Group.bufferSize = 10M
Group.nrofInterfaces = 1
Group.interface1 = wInterface
Group.net.scanInterval = 30
#How often nodes in the group will reorder the messages in their buffer
Group.MessageOrderingInterval=2.0
# Time the node will help at a disaster site (in seconds)
Group.helpTime = 1800
# Probability that a node gets injured if an event happens to close to it [0, 1]
Group.injuryProbability = 0.1
# Time the node will stay at the hospital after transporting someone to it (in seconds)
Group.hospitalWaitTime = 900
# Probability that a node stays at the hospital after transporting someone to it [0, 1]
Group.hospitalWaitProbability = 0.1
# Weight of a disasters intensity for determining if a node will help at the disaster site [0, 1]
Group.intensityWeight = 0.7
# Specifies how much energy the hosts have at the beginning of the simulation
Group.initialEnergy = 0.1,1
# Specifies how much energy is used for scanning
Group.scanEnergy = 0.00001
# Specifies how much energy is used for transmitting
Group.transmitEnergy = 0.0001
# energy starts to decrease from the beginning of the simulation
Group.energyWarmup = 0.0
# Specifies how much energy is used per device discovery response
Group.scanResponseEnergy = 0.00001
# Specifies the range of possible number of seconds before an empty battery is recharged
# 2-12h: 7200 - 43200 seconds
Group.rechargeWait = 7200,43200

# Add database application
dbApp.type = DatabaseApplication
dbApp.utility_threshold = 0.25
dbApp.db_size = 50M, 150M
dbApp.mapSendingInterval = 5400
dbApp.itemsPerMessage = 10
dbApp.seed = 0
Group.nrofApplications = 1
Group.application1 = dbApp

# group1 (locally helping pedestrians) specific settings
Group1.groupID = p
Group1.isLocalHelper = true
Group1.speed = 1,2
Group1.nrofHosts = 8550
Group1.okMaps = 1,2

# group2 (transporting pedestrians) specific settings
Group2.groupID = t
Group2.isLocalHelper = false
Group2.speed = 1,2
Group2.nrofHosts = 450
Group2.okMaps = 1,2

# group3 (cars) specific settings
Group3.groupID = c
Group3.isLocalHelper = false
Group3.speed = 8,14
Group3.nrofHosts = 1000
Group3.okMaps = 2,3


# How many event generators
Events.nrof = 9

# Class for first message type (Broadcasts without photo)
Events2.class = BroadcastEventGenerator
# Creation interval in seconds (one new message every 60 to 300 seconds)
Events2.interval = 60,300
# Message sizes (0.1KB - 1KB)
Events2.size = 0.1k,1k
# range of message source/destination addresses
Events2.hosts = 0,10000
# Message ID prefix
Events2.prefix = b
# Message priorities (2,10)
Events2.priorities = 2,10

# Class for second message type (Broadcasts with photo)
Events3.class = BroadcastEventGenerator
# Creation interval in seconds (one new message every 60 to 120 seconds)
Events3.interval = 60,120
# Message sizes (500KB - 4MB)
Events3.size = 500k,4M
# range of message source/destination addresses
Events3.hosts = 0,10000
# Message ID prefix
Events3.prefix = B
# Message priorities (2,10)
Events3.priorities = 2,10

# Class for third message type (Multicasts small)
Events4.class = MulticastEventGenerator
# Creation interval in seconds (one new message every 0.1 to 3 seconds)
Events4.interval = 0.1,3
# Message sizes (0.1KB - 1KB)
Events4.size = 0.1k,1k
# range of message source/destination addresses
Events4.hosts = 0,10000
# Message ID prefix
Events4.prefix = m
# Message priority 1
Events4.priorities = 1,1
# Total number of multicast groups across all groups
Events4.group_count = 1000,5000
# Size of multicast groups
Events4.group_size = 3,30

# Class for fourth message type (Multicasts large)
Events5.class = MulticastEventGenerator
# Creation interval in seconds (one new message every 10 to 30 seconds)
Events5.interval = 10,30
# Message sizes (500KB - 4MB)
Events5.size = 500k,4M
# range of message source/destination addresses
Events5.hosts = 0,10000
# Message ID prefix
Events5.prefix = M
# Message priority 1
Events5.priorities = 1,1
# Total number of multicast groups across all groups
Events5.group_count = 1000,5000
# Size of multicast groups
Events5.group_size = 3,30

# Class for fifth message type (1-to-1 messages small)
Events6.class = MessageEventGenerator
# Creation interval in seconds (one new message every 0.5 to 15 seconds)
Events6.interval = 0.5,15
# Message sizes (0.1KB - 1KB)
Events6.size = 0.1k,1k
# range of message source/destination addresses
Events6.hosts = 0,10000
# Message ID prefix
Events6.prefix = p
# Message priority 0
Events6.priorities = 0,0

# Class for sixth message type (1-to-1 messages large)
Events7.class = MessageEventGenerator
# Creation interval in seconds (one new message every 50 to 150 seconds)
Events7.interval = 50,150
# Message sizes (500KB - 4MB)
Events7.size = 500k,4M
# range of message source/destination addresses
Events7.hosts = 0,10000
# Message ID prefix
Events7.prefix = P
# Message priority 0
Events7.priorities = 0,0

# Class for map data
Events8.class = MapDataGenerator
# Data sizes ( 500kB - 3MB )
Events8.size = 500k,3M
# range of message source/destination addresses
Events8.hosts = 0,9999
# seed for the pseudo random generator
Events8.seed = 0
# number of map data per host
Events8.numMaps = 1,1

# Class for disaster data
Events9.class = DisasterDataGenerator
# Data sizes ( 50kB - 100kB )
Events9.size = 50k,100k
# range of message source/destination addresses
Events9.hosts = 0,9999
# seed for the pseudo random generator
Events9.seed = 0
# data location offset for the distance between created data item and the creator
Events9.location_offset = 0,100
# Creation interval in seconds (one new message every 1 to 3 seconds)
Events9.interval = 1,3

## Movement model settings
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 25000,25000
MapBasedMovement.nrofMapFiles = 3
MapBasedMovement.mapFile1 = data/paderborn_pedestrians_only.wkt
MapBasedMovement.mapFile2 = data/paderborn_pedestrians_and_cars.wkt
MapBasedMovement.mapFile3 = data/paderborn_cars_only.wkt

## Reports - all report names have to be valid report classes
Report.nrofReports = 6
Report.reportDir = reports/
# length of the warm up period (simulated seconds)
Report.warmup = 0
Report.report1 = ImmediateMessageDelayReport
Report.report2 = DeliveryProbabilityReport
Report.report3 = BroadcastDeliveryReport
Report.report4 = MulticastMessageDeliveryReport
Report.report5 = TrafficReport
Report.report6 = DataSyncReport
DataSyncReport.precision=2

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 1
Optimization.randomizeUpdateOrder = true
# Define whether you need the full message path or just hop count is sufficient
# If you do not store the full message path some reports might fail
Optimization.storeFullMessagePath = false